# -*- coding: utf-8 -*-
"""TUGAS 11

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n4f4DFhCnJK8J_cJqv79eD_ORzSLQwqs
"""

#Kode Program SVM

from sklearn import svm

#Database: Gerbang Logika AND
#X=Data, y=target
x = [[0, 0], [0, 1], [1, 0], [1,1]]
y = [0, 0, 0, 1]

#training and classify
clf = svm.SVC()
clf.fit(x,y)

#Prediksi
print ("Logika AND Metode Support Vector Machine (SVM)")
print ("Logika = Prediksi")
print ("0 0 =",clf.predict([[0, 0]]))
print ("0 1 =",clf.predict([[0, 1]]))
print ("1 0 =",clf.predict([[1, 0]]))
print ("1 1 =",clf.predict([[1, 1]]))


def Trapezoid(a,b,f):
  n = 100
  def trapezoid(f,a,b,n=100):
      h = (b-a)/n
      sum = 0.0
      for i in range(1, n):
          x = a + i*h
          sum += f(x)
      integral = (h / 2) * (f(a) + 2 * sum + f(b))
      print(a,",",b,",",round(integral,2))
      return integral

# Melakukan looping untuk membuat database dari beberapa soal integral
functions = [
    lambda x: 2 * x,           # Fungsi pertama: f(x) = 2x
    lambda x: 2 * x + 2,       # Fungsi kedua: f(x) = 2x + 2
    lambda x: 4 * x + 4,       # Fungsi ketiga: f(x) = 4x + 4
    lambda x: 4 * x + 6,       # Fungsi keempat: f(x) = 4x + 6
    lambda x: 6 * x + 8,       # Fungsi kelima: f(x) = 6x + 8
    lambda x: 8 * x + 10,      # Fungsi keenam: f(x) = 8x + 10
    lambda x: 10 * x + 12,     # Fungsi ketujuh: f(x) = 10x + 12
    lambda x: 12 * x + 14,     # Fungsi kedelapan: f(x) = 12x + 14
    lambda x: 14 * x + 12,     # Fungsi kesembilan: f(x) = 14x + 12
    lambda x: 20 * x + 40      # Fungsi kesepuluh: f(x) = 20x + 40
]

# Looping untuk menghitung integral masing-masing fungsi
for i, func in enumerate(functions):
    a = i + 1  # Batas bawah
    b = i + 2  # Batas atas
    trapezoid(a, b, func)  # Menghitung integral

# Import library yang diperlukan
import numpy as np
import pandas as pd
from sklearn import svm
from google.colab import drive
import matplotlib.pyplot as plt

# Mount Google Drive
drive.mount('/content/drive')

# Path ke file Function.txt di Google Drive
file_path='/content/drive/My Drive/pertamaa.txt' # Sesuaikan dengan path file Anda

# Membaca data dari file
Database = pd.read_csv(file_path, sep=',', header=0)

#X = data, y = target
X = Database [['a','b']] # Pastikan kolom sesuai dengan nama yang ada di file
y = Database ['Target']

# Membuat dan melatih model SVM
clf=svm.SVC()
clf.fit(X.values, y)

# Melakukan prediksi
y_pred = clf.predict(X.values)

# Menampilkan hasil prediksi
print("Hasil prediksi:")
for i, pred in enumerate(y_pred):
  print(f"({X.iloc[i, 0]}, {X.iloc[i, 1]}), {pred}")

# Membuat plot perbandingan nilai asli dengan nilai prediksi
plt.figure(figsize=(10, 6))
plt.plot(range(len(y)), y, 'o-', label='Nilai Asli (Target)', color='blue')
plt.plot(range(len(y_pred)), y_pred, 'x--', label='Nilai Prediksi (SVM)',
color='yellow')

# Menambahkan label dan judul
plt.xlabel('Indeks Data')
plt.ylabel('Nilai')
plt.title('Perbandingan Nilai Asli vs Nilai Prediksi Menggunakan SVM')
plt.legend()

# Menambahkan grid
plt.grid()
plt.show()

#Kode Program SVM

from sklearn import svm

#Database: Gerbang Logika AND
#X=Data, y=target
x = [[0, 0], [0, 1], [1, 0], [1,1]]
y = [0, 0, 0, 1]

#training and classify
clf = svm.SVC()
clf.fit(x,y)

#Prediksi
print ("Logika AND Metode Support Vector Machine (SVM)")
print ("Logika = Prediksi")
print ("0 0 =",clf.predict([[0, 0]]))
print ("0 1 =",clf.predict([[0, 1]]))
print ("1 0 =",clf.predict([[1, 0]]))
print ("1 1 =",clf.predict([[1, 1]]))


def Trapezoid(a,b,f):
  n = 100
  def trapezoid(f,a,b,n=100):
      h = (b-a)/n
      sum = 0.0
      for i in range(1, n):
          x = a + i*h
          sum += f(x)
      integral = (h / 2) * (f(a) + 2 * sum + f(b))
      print(a,",",b,",",round(integral,2))
      return integral

# Melakukan looping untuk membuat database dari beberapa soal integral
functions = [
    lambda x: 2 * x,           # Fungsi pertama: f(x) = 2x
    lambda x: 2 * x + 2,       # Fungsi kedua: f(x) = 2x + 2
    lambda x: 4 * x + 4,       # Fungsi ketiga: f(x) = 4x + 4
    lambda x: 4 * x + 6,       # Fungsi keempat: f(x) = 4x + 6
    lambda x: 6 * x + 8,       # Fungsi kelima: f(x) = 6x + 8
    lambda x: 8 * x + 10,      # Fungsi keenam: f(x) = 8x + 10
    lambda x: 10 * x + 12,     # Fungsi ketujuh: f(x) = 10x + 12
    lambda x: 12 * x + 14,     # Fungsi kedelapan: f(x) = 12x + 14
    lambda x: 14 * x + 12,     # Fungsi kesembilan: f(x) = 14x + 12
    lambda x: 20 * x + 40      # Fungsi kesepuluh: f(x) = 20x + 40
]

# Looping untuk menghitung integral masing-masing fungsi
for i, func in enumerate(functions):
    a = i + 2  # Batas bawah
    b = i + 4  # Batas atas
    trapezoid(a, b, func)  # Menghitung integral

# Import library yang diperlukan
import numpy as np
import pandas as pd
from sklearn import svm
from google.colab import drive
import matplotlib.pyplot as plt

# Mount Google Drive
drive.mount('/content/drive')

# Path ke file Function.txt di Google Drive
file_path='/content/drive/My Drive/function.txt' # Sesuaikan dengan path file Anda

# Membaca data dari file
Database = pd.read_csv(file_path, sep=',', header=0)

#X = data, y = target
X = Database [['a','b']] # Pastikan kolom sesuai dengan nama yang ada di file
y = Database ['Target']

# Membuat dan melatih model SVM
clf=svm.SVC()
clf.fit(X.values, y)

# Melakukan prediksi
y_pred = clf.predict(X.values)

# Menampilkan hasil prediksi
print("Hasil prediksi:")
for i, pred in enumerate(y_pred):
  print(f"({X.iloc[i, 0]}, {X.iloc[i, 1]}), {pred}")

# Membuat plot perbandingan nilai asli dengan nilai prediksi
plt.figure(figsize=(10, 6))
plt.plot(range(len(y)), y, 'o-', label='Nilai Asli (Target)', color='blue')
plt.plot(range(len(y_pred)), y_pred, 'x--', label='Nilai Prediksi (SVM)',
color='yellow')

# Menambahkan label dan judul
plt.xlabel('Indeks Data')
plt.ylabel('Nilai')
plt.title('Perbandingan Nilai Asli vs Nilai Prediksi Menggunakan SVM')
plt.legend()

# Menambahkan grid
plt.grid()
plt.show()